# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
    build:
        docker:
            # specify the version you desire here
            # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
            - image: circleci/python:3.6.1

            # Specify service dependencies here if necessary
            # CircleCI maintains a library of pre-built images
            # documented at https://circleci.com/docs/2.0/circleci-images/
            - image: circleci/postgres:9.4

        working_directory: ~/repo

        steps:
            - checkout

            - run:
                name: Configure DB settings
                command: |
                    cp document_management/settings_local{.ci.py,.py}

            # Download and cache dependencies
            - restore_cache:
                keys:
                    - v1-dependencies-{{ checksum "requirements.txt" }}
                    # fallback to using the latest cache if no exact match is found
                    - v1-dependencies-

            - run:
                name: install dependencies
                command: |
                    python3 -m venv venv
                    . venv/bin/activate
                    pip install -r requirements.txt
                    pip install flake8

            - save_cache:
                paths:
                    - ./venv
                key: v1-dependencies-{{ checksum "requirements.txt" }}

            # Configuration for yarn dependencies
            # - restore_cache:
            #     keys:
            #     - yarn-dependencies-{{ checksum "yarn.lock" }}

            # - run:
            #     name: Install front-end dependencies
            #     command: yarn install

            # - save_cache:
            #     paths:
            #         - ./node_modules
            #     key: yarn-dependencies-{{ checksum "yarn.lock" }}

            # - run:
            #     name: Collect static
            #     command: |
            #         . venv/bin/activate
            #         python manage.py collectstatic -l --noinput

            - run:
                name: run tests
                command: |
                    . venv/bin/activate
                    python manage.py test --parallel

            - store_artifacts:
                path: test-reports
                destination: test-reports

            - run:
                name: Flake8 tests
                command: |
                    export DIFF_FILES=$(git diff --name-only --diff-filter=b $(git merge-base HEAD origin/master) | grep ".py")
                    if [[ ! -z $DIFF_FILES ]]
                    then
                    echo "Checking ..." $DIFF_FILES
                    venv/bin/flake8 --exclude migrations,libraries,settings.py --ignore=E501,W504 $DIFF_FILES
                    fi
